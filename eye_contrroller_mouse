import cv2
import mediapipe as mp
import pyautogui

# Initialize camera and face mesh detector
cam = cv2.VideoCapture(0)
face_mesh = mp.solutions.face_mesh.FaceMesh(refine_landmarks=True)
screen_w, screen_h = pyautogui.size()

# Variable to control when to click
click_enabled = False

while True:
    _, frame = cam.read()
    frame = cv2.flip(frame, 1)
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    output = face_mesh.process(rgb_frame)
    landmark_points = output.multi_face_landmarks
    frame_h, frame_w, _ = frame.shape

    if landmark_points:
        landmarks = landmark_points[0].landmark
        for id, landmark in enumerate(landmarks[474:478]):  # Focus on eye landmarks
            x = int(landmark.x * frame_w)
            y = int(landmark.y * frame_h)
            cv2.circle(frame, (x, y), 2, (0, 255, 0), -1)

            if id == 1:  # Choose a specific landmark for cursor control
                screen_x = screen_w / frame_w * x
                screen_y = screen_h / frame_h * y
                pyautogui.moveTo(screen_x, screen_y)

        # Detect blinking for click (landmarks for the left eye: 145 and 159)
        left_eye_top = landmarks[145]
        left_eye_bottom = landmarks[159]
        left_eye_distance = abs(left_eye_top.y - left_eye_bottom.y)

        if left_eye_distance < 0.01:  # Threshold for blink detection
            if not click_enabled:
                pyautogui.click()
                click_enabled = True
        else:
            click_enabled = False

    # Display the frame
    cv2.imshow('Eye-Controlled Mouse', frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):  # Press 'q' to exit
        break

# Release resources
cam.release()
cv2.destroyAllWindows()
